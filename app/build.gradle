/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.0.0/userguide/building_java_projects.html in the Gradle documentation.
 */
plugins {
  // Apply the application plugin to add support for building a CLI application in Java.
  id 'application'
  id 'io.spring.dependency-management' version '1.1.5'
  id 'org.springframework.boot' version '3.5.5'
}

java {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

repositories {
  // Use Maven Central for resolving dependencies.
  mavenCentral()
}

dependencies {
  // Spring
  implementation 'org.springframework.boot:spring-boot-starter-batch'
  runtimeOnly 'com.h2database:h2'
  
  // Use JUnit Jupiter for testing.
  testImplementation libs.junit.jupiter

  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

  // This dependency is used by the application.
  implementation libs.guava

  // Lombok
  compileOnly 'org.projectlombok:lombok:1.18.30'
  annotationProcessor 'org.projectlombok:lombok:1.18.30'

  // MyBatis
  implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.5'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

application {
  // Define the main class for the application.
  mainClass = 'org.example.App'
}

tasks.named('test') {
  // Use JUnit Platform for unit tests.
  useJUnitPlatform()
}
